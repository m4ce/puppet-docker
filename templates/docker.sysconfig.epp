#
# Managed by Puppet in the <%= $::environment %> environment
#

# Modify these options if you want to change the way the docker daemon runs
OPTIONS='<%= docker::build_options($docker::daemon_options) %>'
DOCKER_CERT_PATH=<%= $docker::cert_path %>

# If you want to add your own registry to be used for docker search and docker
# pull use the ADD_REGISTRY option to list a set of registries, each prepended
# with --add-registry flag. The first registry added will be the first registry
# searched.
ADD_REGISTRY='<%= join($docker::add_registries.map |$registry| { "--add-registry ${registry}" }, " ") %>'

# If you want to block registries from being used, uncomment the BLOCK_REGISTRY
# option and give it a set of registries, each prepended with --block-registry
# flag. For example adding docker.io will stop users from downloading images
# from docker.io
BLOCK_REGISTRY='<%= join($docker::block_registries.map |$registry| { "--block-registry ${registry}" }, " ") %>'

# If you have a registry secured with https but do not have proper certs
# distributed, you can tell docker to not look for full authorization by
# adding the registry to the INSECURE_REGISTRY line and uncommenting it.
INSECURE_REGISTRY='<%= join($docker::insecure_registries.map |String $registry| { "--insecure-registry ${registry}" }, " ") %>'
<% if 'selinux' in $docker::daemon_options and 'enabled' in $docker::daemon_options['selinux'] and $docker::daemon_options['selinux']['enabled'] == false { -%>

# On an SELinux system, if you remove the --selinux-enabled option, you
# also need to turn on the docker_transition_unconfined boolean.
setsebool -P docker_transition_unconfined 1
<% } -%>
<% if $docker::tmpdir { -%>

# Location used for temporary files, such as those created by
# docker load and build operations. Default is /var/lib/docker/tmp
# Can be overriden by setting the following environment variable.
DOCKER_TMPDIR=<%= $docker::tmpdir %>
<% } -%>
<% if $docker::logrotate != undef { -%>

# Controls the /etc/cron.daily/docker-logrotate cron job status.
LOGROTATE=<%= $docker::logrotate %>
<% } -%>
<% if $docker::bin_path { -%>

# docker-latest daemon can be used by starting the docker-latest unitfile.
# To use docker-latest client, uncomment below line
DOCKERBINARY=<%= docker::bin_path %>
<% } -%>
